{"version":3,"sources":["components/home.jsx","components/write.jsx","components/article.jsx","components/navbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Container","className","Row","Col","sm","ButtonToolbar","Button","variant","size","Link","to","style","textDecoration","color","Component","Write","state","name","title","article","validate","isError","errors","_this","length","articleError","alert","setState","Object","objectSpread","onSubmitForm","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","_this2","this","Form","onSubmit","paddingBottom","Group","controlId","Label","Control","type","required","value","onChange","e","target","as","rows","Article","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","categories","axios","get","data","map","category","date","CustomBar","Navbar","collapseOnSelect","expand","bg","Brand","Nav","Collapse","id","inline","FormControl","placeholder","App","HashRouter","navbar","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e54c2f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './home.css';\r\nimport { Container, Row, Col, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <Container className='home-grid'>\r\n                <Row>\r\n                    <Col className='home-col' sm={12}><h1>Welcome to the Article World</h1></Col>                    \r\n                </Row>\r\n                <Row>\r\n                    <Col sm={12} >\r\n                    <ButtonToolbar className='button-toolbar'>\r\n                        <Button variant=\"danger\" size=\"lg\"><Link to=\"/article\" style={{textDecoration:'none', color:'white'}}>Article Feed</Link></Button>\r\n                        <Button variant=\"danger\" size=\"lg\"><Link to=\"/write\" style={{textDecoration:'none', color:'white'}}>Write Article</Link></Button>\r\n                    </ButtonToolbar>\r\n                    </Col>                    \r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col sm={12} className='home-bottom-grid' >\r\n                       <div>          \r\n                       </div>\r\n                    </Col>                    \r\n                </Row>\r\n\r\n\r\n           </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './write.css';\r\n\r\nclass Write extends Component {\r\n    state = {\r\n            name: '',\r\n            title: '',\r\n            article: ''\r\n        }\r\n    \r\n   validate = () => {\r\n       let isError = false;\r\n       const errors = {};\r\n\r\n       if (this.state.article.length < 100 ) {\r\n         isError = true;\r\n         errors.articleError = alert(\"Article needs to be atleast 100 characters long\");\r\n       }\r\n\r\n       \r\n       if (isError) {\r\n           this.setState({\r\n               ...this.state,\r\n               ...errors\r\n           });\r\n       }\r\n       return isError;\r\n   }\r\n        \r\n   onSubmitForm = () => {\r\n      \r\n       const err = this.validate ();\r\n       if (!err) {\r\n        fetch('https://young-retreat-10768.herokuapp.com/write', {\r\n  \t\t\tmethod: 'post',\r\n  \t\t\theaders: {'Content-Type': 'application/json'},\r\n  \t\t\tbody: JSON.stringify({\r\n  \t\t\t\tname: this.state.name,\r\n  \t\t\t\ttitle: this.state.title,\r\n  \t\t\t\tarticle: this.state.article\r\n  \t\t\t})\r\n  \t\t})\r\n  \t\t.then(response => response.json())\r\n         }\r\n\t\t\r\n\t\t\t\t\r\n\t}\r\n    \r\n \r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Form className='article-form' onSubmit={() => this.onSubmitForm()} >\r\n                <h1 style={{paddingBottom: '10px'}}>Write an Article</h1>\r\n\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Full Name</Form.Label>\r\n                    <Form.Control type=\"text\" required name=\"fullname\" value={this.state.name}  onChange={e => this.setState({name: e.target.value})} />\r\n                </Form.Group> \r\n\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"text\" required name=\"title\" value={this.state.title}  onChange={e => this.setState({title: e.target.value})} />\r\n                </Form.Group>                \r\n                \r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Body</Form.Label>\r\n                    <Form.Control as=\"textarea\" required rows=\"10\" name=\"article\" value={this.state.article} onChange={e => this.setState({article: e.target.value})}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"danger\" type=\"submit\" >\r\n                    Submit\r\n                </Button>\r\n                </Form>\r\n                <div className='article-bottom-grid'></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Write;","import React, { Component } from 'react';\r\nimport './article.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Article extends Component {\r\n\r\n    constructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tcategories: []\r\n\t\t}\r\n\t}\r\n\r\n    componentDidMount(){\r\n\t\taxios.get('https://young-retreat-10768.herokuapp.com/article')\r\n\t\t.then(response => {\r\n            this.setState({categories: response.data});\r\n        });\r\n\t}\r\n\r\n\r\n     render() {\r\n        \r\n        return (\r\n            <div className='article-main'>\r\n               <div className='wrapper'>\r\n                    <div className='article'>\r\n\r\n                {\r\n                    this.state.categories.map(category => {\r\n                    return (\r\n\r\n                        <div className='cards'>\r\n                        <h2>{category.title}</h2>\r\n                        <p>{category.article}</p>\r\n                        <p><strong>{category.name}</strong></p>\r\n                        <small>Date - {category.date}</small>\r\n                        </div>\r\n                        )\r\n\r\n                     })\r\n\r\n                 }\r\n                            \r\n                        \r\n                    </div>\r\n               </div>\r\n\r\n               <div className='article-bottom-grid'></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CustomBar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"md\" bg=\"light\" variant=\"light\" >\r\n                <Navbar.Brand><Link to=\"/\" style={{textDecoration:'none', color:'#3E3E3E  '}}>Article World</Link></Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                \r\n                <Nav.Link><Link to=\"/article\" style={{textDecoration:'none', color:'#545454'}}>Article Feed</Link></Nav.Link>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav.Link><Link to=\"/write\" style={{textDecoration:'none', color:'#545454'}}>Write One</Link></Nav.Link>\r\n                </Navbar.Collapse>\r\n                </Nav>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Form inline className='nav-form-button' >\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <Button variant=\"outline-danger\">Search</Button>\r\n                </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomBar;","import React, { Component } from 'react';\n\n\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/home';\nimport Write from './components/write';\nimport Article from './components/article';\nimport CustomBar from './components/navbar';\n\nclass App extends Component {\n  \n\n  render() {\n    return (\n      <Router>\n        <div>\n          <CustomBar />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/article\" component={Article} />\n          <Route path=\"/write\" component={Write} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}